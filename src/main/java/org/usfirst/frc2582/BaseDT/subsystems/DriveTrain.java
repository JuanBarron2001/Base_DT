// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2582.BaseDT.subsystems;

import org.usfirst.frc2582.BaseDT.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Spark topLeft;
    private Spark bottomLeft;
    private SpeedControllerGroup leftMotors;
    private Spark topRight;
    private Spark bottomRight;
    private SpeedControllerGroup rightMotors;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        topLeft = new Spark(0);
        addChild("topLeft",topLeft);
        topLeft.setInverted(false);
        
        bottomLeft = new Spark(1);
        addChild("bottomLeft",bottomLeft);
        bottomLeft.setInverted(false);
        
        leftMotors = new SpeedControllerGroup(topLeft, bottomLeft  );
        addChild("LeftMotors",leftMotors);
        
        
        topRight = new Spark(2);
        addChild("topRight",topRight);
        topRight.setInverted(true);
        
        bottomRight = new Spark(3);
        addChild("bottomRight",bottomRight);
        bottomRight.setInverted(true);
        
        rightMotors = new SpeedControllerGroup(topRight, bottomRight  );
        addChild("RightMotors",rightMotors);
        
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());

        setDefaultCommand(new JoyDrive());
    }

    
    @Override
    public void periodic() {
        // Put code here to be run every loop
        
    }
    

    public void driveVoltage(double l,double r)
    {
        leftMotors.set(Math.pow(l,3) + Math.pow(r,3));
        rightMotors.set(Math.pow(l,3) + Math.pow(-r,3));
    }
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

